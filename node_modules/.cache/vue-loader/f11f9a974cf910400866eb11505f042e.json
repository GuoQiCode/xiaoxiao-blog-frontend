{"remainingRequest":"E:\\xiaoxiao-blog-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\xiaoxiao-blog-frontend\\src\\components\\index\\work.vue?vue&type=template&id=e44dad84&scoped=true&","dependencies":[{"path":"E:\\xiaoxiao-blog-frontend\\src\\components\\index\\work.vue","mtime":1578745086338},{"path":"E:\\xiaoxiao-blog-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\xiaoxiao-blog-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\xiaoxiao-blog-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\xiaoxiao-blog-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}